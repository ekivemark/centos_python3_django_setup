#!/bin/bash

set +x
set -e
set -u
export PS4='+(${BASH_SOURCE}:${LINENO}): ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'

(
    user=$(id -u)
    if [[ $user -eq 0 ]]; then 
        echo "Do you want to run this as root?"
    fi 
)

(
    set +e
    rpm -q mod_wsgi
    status=$?
    set -e
    if [[ $status -eq 0 ]]; then
        echo "uninstall mod_wsgi"
        exit 1
    else
        echo "which is great since we do not want the default mod_wsgi"
    fi
)

(
    error=0
    # http://www.1stbyte.com/2005/06/26/configure-and-compile-python-with-zlib/
    # Postgreql:
    # DB="postgresql postgresql-devel postgresql-libs"
    # MySQL:
    DB="mysql"
    rpms="wget openssl openssl-devel gcc httpd httpd-devel httpd-tools httpd-manual zlib-devel readline readline-devel bzip2-devel $DB"
    for i in $rpms; do 
        set +e
        rpm -q $i
        status=$?
        set -e
        if [[ $status -ne 0 ]]; then
            error=1
        fi
    done
    if [[ $error -ne 0 ]]; then
        echo "Also do \"yum groupinstall \"development tools\"\""
        exit 1
    fi
)

PYTHON_DOWNLOAD_PATH="https://www.python.org/ftp/python/3.5.1/"
PYTHON_FULL_NAME="Python-3.5.1.tgz"
PYTHON_BASE_NAME="Python-3.5.1"
ROOT=MyRoot
MyProject="bb-hos"
MyProjectPath="$ROOT/$MyProject"
PYTHONHOME="$ROOT/python35"

mkdir -p cache
mkdir -p build/python
mkdir -p build/mod_wsgi


# fetch python3
(
    echo "PYTHONHOME=$PYTHONHOME"
    cd cache
    if [[ ! -r "$PYTHON_FULL_NAME" ]]; then 
        wget "$PYTHON_DOWNLOAD_PATH/$PYTHON_FULL_NAME"
    fi
    if [[ ! -r "$PYTHON_FULL_NAME" ]]; then 
        echo "Could not find $PYTHON_FULL_NAME in $(pwd)"
        exit 1
    fi
    cp "$PYTHON_FULL_NAME" ../build/python
)

# fetch mod_wsgi
(
   cd cache
   if [[ ! -r mod_wsgi-4.5.2.tar.gz ]]; then
      # wget http://modwsgi.googlecode.com/files/mod_wsgi-4.5.2.tar.gz
      wget https://github.com/GrahamDumpleton/mod_wsgi/archive/4.5.2.tar.gz
      mv 4.5.2.tar.gz mod_wsgi-4.5.2.tar.gz
   fi
   if [[ ! -r mod_wsgi-4.5.2.tar.gz ]]; then
      echo "Could not find mod_wsgi-4.5.2.tar.gz in $(pwd)"
      exit 1
   fi
)

# build python3
(
    echo "PYTHONHOME=$PYTHONHOME"
    if [[ ! -r "$PYTHONHOME/bin/python3" ]]; then
        cd build/python
        tar xvzf "$PYTHON_FULL_NAME"
        cd "$PYTHON_BASE_NAME"
        ./configure --prefix="$PYTHONHOME" --with-zlib --with-openssl --enable-shared
        if [[ $? -ne 0 ]]; then
            echo "configure failed"
            exit 1
        fi
        make
        if [[ $? -ne 0 ]]; then
            echo "make failed"
            exit 1
        fi
        make install
        if [[ $? -ne 0 ]]; then
            echo "install of python failed"
            exit 1
        fi
    else
       echo "Python already built, skipping"
    fi
)

# build mod_wsgi
(
    echo "/$ROOT/python35/lib > /etc/ld.so.conf.d/$ROOT-python3.conf"
    ldconfig -v
    if [[ ! -r build/mod_wsgi/mod_wsgi-4.5.2/mod_wsgi.lo ]]; then
       cd build/mod_wsgi
       tar xvzf ../../cache/mod_wsgi-4.5.2.tar.gz
       cd mod_wsgi-4.5.2
       ./configure --prefix=$ROOT/mod_wsgi --with-python=$ROOT/python35/bin/python3.5 --with-apxs=/usr/sbin/apxs LDFLAGS="-Wl,-rpath -Wl,$ROOT/python35/lib"
       sed -i "s/-lpython3.5/-lpython3.5m/" Makefile  # https://groups.google.com/forum/#!topic/modwsgi/zk28E_XS68w
       sed -i "s|DESTDIR =|DESTDIR = $ROOT/mod_wsgi|" Makefile
       make
       make install
       libtool --finish $ROOT/mod_wsgi/usr/lib64/httpd/modules
    else
       echo "mod_wsgi already built, skipping"
    fi
)

if [[ ! -r "$MyProjectPath/bin/activate" ]] ; then 
    "$PYTHONHOME/bin/python3.5" "$PYTHONHOME/bin/pyvenv" "$MyProjectPath"
else
    echo "$MyProjectPath  already there, skipping..."
fi
set +u  # I think this is a bug with activate
source "$MyProjectPath/bin/activate"
set -u

echo
#echo "PYTHONHOME=$PYTHONHOME"  # activate will unset $PYTHONHOME
echo "which python:"
which python
echo "python -V"
python -V
echo

echo  "LoadModule wsgi_module $ROOT/mod_wsgi/usr/lib64/httpd/modules/mod_wsgi.so" > /etc/httpd/conf.d/$MyProject-wsgi.conf
cat << EOF > /etc/httpd/conf.d/$MyProject.conf
<Directory "/var/www/html/$MyProject/">
    AllowOverride All
    Order allow,deny
    Allow from all
</Directory>

WSGIScriptAlias /$MyProject $ROOT/$MyProject-site/$MyProject/$MyProject/wsgi.py
WSGIPythonPath $ROOT/$MyProject-site/$MyProject:$MyProjectPath/lib/python3.5/site-packages

#WSGIApplicationGroup %{GLOBAL}

<Directory $ROOT/$MyProject-site/$MyProject/$MyProject>
<Files wsgi.py>
#Require all granted
</Files>
</Directory>
EOF

# use the fill path for pip else it installs in the global python installation instead of our venv
$ROOT/python35/bin/pip3.5 install https://www.djangoproject.com/download/1.8.13/tarball/
#$ROOT/python35/bin/pip3.5 install django
# MySQL
#$ROOT/python35/bin/pip3.5 install mysqlclient
# postgrSQL
#$ROOT/python35/bin/pip3.5 install psycopg2
# iPython
#$ROOT/python35/bin/pip3.5 install ipython
